# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserType {
  id: ID!
  avatarSrc: String
  name: String
  email: String
  phone: String
  isAdmin: Boolean
  provider: String
  providerId: String
  createdBy: UserType
  updatedBy: UserType
  createdAt: DateTime
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PrizeType {
  id: ID!
  key: Float!
  name: String!
  qty: Float!
}

type PersonModel {
  id: ID!
  manv: String!
  name: String!
}

type WinnerModel {
  id: ID!
  manv: String!
  name: String!
  prizeId: String!
  key: Float!
  prize: String!
}

type FortuneModel {
  id: ID!
  title: String!
  type: String!
  description: String
  persons: [PersonModel!]
  prizes: [PrizeType!]
  winners: [WinnerModel!]
  createdBy: UserType!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CategoryModel {
  _id: String!
  displayName: String!
  description: String!
  slug: String
  imageSrc: String
  content: String
  isProtect: Boolean
  createdBy: UserType!
  updatedBy: UserType
  createdAt: DateTime!
  updatedAt: DateTime!
  isMenu: Boolean
  subCategories: [SubCategoryModel!]!
}

type SubCategoryModel {
  _id: String!
  displayName: String!
  description: String!
  slug: String
  imageSrc: String
  content: String
  isProtect: Boolean
  createdBy: UserType!
  updatedBy: UserType
  createdAt: DateTime!
  updatedAt: DateTime!
  isMenu: Boolean
  category: CategoryModel!
  pages: [SubCategoryModel!]!
}

type PageModel {
  _id: String!
  displayName: String!
  description: String!
  slug: String
  imageSrc: String
  content: String
  isProtect: Boolean
  createdBy: UserType!
  updatedBy: UserType
  createdAt: DateTime!
  updatedAt: DateTime!
  category: CategoryModel!
  subCategory: SubCategoryModel!
}

type Query {
  users: [UserType!]!
  user(id: String!): UserType!
  wheelFortunes: [FortuneModel!]!
  randomFortunes: [FortuneModel!]!
  fortune(id: String!): FortuneModel!
  guestFortune(id: String!): FortuneModel!
  subCategories: [SubCategoryModel!]!
  subCategory(id: String!): SubCategoryModel!
  subCategoryWithSlug(catSlug: String!, subCatSlug: String!): SubCategoryModel!
  categories: [CategoryModel!]!
  category(id: String!): CategoryModel!
  pages: [PageModel!]!
  page(id: String!): PageModel!
}

type Mutation {
  winner(id: String!, input: SpinWheelInput!): WinnerModel!
  randomWinner(id: String!, input: RandomInput!): WinnerModel!
  createFortune(input: FortuneDto!): FortuneModel!
  updateFortune(id: String!, input: UpdateFortuneDto!): FortuneModel!
  deleteFortune(id: String!): FortuneModel!
}

input SpinWheelInput {
  player: String!
}

input RandomInput {
  prizeId: String!
}

input FortuneDto {
  type: String!
  title: String!
  description: String
  persons: [PersonInput!]
  prizes: [PrizeInput!]
}

input PersonInput {
  id: String
  manv: String!
  name: String!
}

input PrizeInput {
  id: String
  key: Float!
  name: String!
  qty: Float!
}

input UpdateFortuneDto {
  title: String
  description: String
  persons: [PersonInput!]
  prizes: [PrizeInput!]
}